import type { BaseHttpRequest } from './core/BaseHttpRequest';
import type { OpenAPIConfig } from './core/OpenAPI';
import { AksjonspunktService } from './services.gen';
import { AktoerService } from './services.gen';
import { ArbeidsgiverService } from './services.gen';
import { BehandlingÅrskvantumUttakService } from './services.gen';
import { BehandlingÅrskvantumUttrekkService } from './services.gen';
import { BehandlingerService } from './services.gen';
import { BehandlingFosterbarnService } from './services.gen';
import { BehandlingPersonService } from './services.gen';
import { BehandlingPleiepengerUttakService } from './services.gen';
import { BehandlingUttakService } from './services.gen';
import { BehandlingUtvidetRettService } from './services.gen';
import { BeregningService } from './services.gen';
import { BeregningsgrunnlagService } from './services.gen';
import { BeregningsresultatService } from './services.gen';
import { BrevService } from './services.gen';
import { BrukerdialogService } from './services.gen';
import { DefaultService } from './services.gen';
import { DødService } from './services.gen';
import { DokumentService } from './services.gen';
import { FagsakService } from './services.gen';
import { FeriepengerService } from './services.gen';
import { FordelService } from './services.gen';
import { ForvaltningService } from './services.gen';
import { ForvaltningPersonService } from './services.gen';
import { HistorikkService } from './services.gen';
import { InfotrygdmigreringService } from './services.gen';
import { InitFetchService } from './services.gen';
import { InntektArbeidYtelseService } from './services.gen';
import { IntegrasjonService } from './services.gen';
import { JournalposterService } from './services.gen';
import { KodeverkService } from './services.gen';
import { KompletthetService } from './services.gen';
import { KontrollService } from './services.gen';
import { LosService } from './services.gen';
import { NavAnsattService } from './services.gen';
import { NotatService } from './services.gen';
import { OmsorgenForService } from './services.gen';
import { OppdragService } from './services.gen';
import { OppgittOpptjeningService } from './services.gen';
import { OpplæringsinstitusjonService } from './services.gen';
import { OpplæringspengerService } from './services.gen';
import { OpptjeningService } from './services.gen';
import { PerioderService } from './services.gen';
import { PipService } from './services.gen';
import { ProsesstaskService } from './services.gen';
import { RapporteringService } from './services.gen';
import { RedirectService } from './services.gen';
import { RegisterdataService } from './services.gen';
import { SaksnummerService } from './services.gen';
import { SøknadService } from './services.gen';
import { SøknadsfristService } from './services.gen';
import { SykdomService } from './services.gen';
import { TilbakekrevingsvalgService } from './services.gen';
import { TilsynService } from './services.gen';
import { TotrinnskontrollService } from './services.gen';
import { UttakService } from './services.gen';
import { VedtakService } from './services.gen';
import { VilkårService } from './services.gen';
import { YtelserService } from './services.gen';
type HttpRequestConstructor = new (config: OpenAPIConfig) => BaseHttpRequest;
export declare class Client {
    readonly aksjonspunkt: AksjonspunktService;
    readonly aktoer: AktoerService;
    readonly arbeidsgiver: ArbeidsgiverService;
    readonly behandlingÅrskvantumUttak: BehandlingÅrskvantumUttakService;
    readonly behandlingÅrskvantumUttrekk: BehandlingÅrskvantumUttrekkService;
    readonly behandlinger: BehandlingerService;
    readonly behandlingFosterbarn: BehandlingFosterbarnService;
    readonly behandlingPerson: BehandlingPersonService;
    readonly behandlingPleiepengerUttak: BehandlingPleiepengerUttakService;
    readonly behandlingUttak: BehandlingUttakService;
    readonly behandlingUtvidetRett: BehandlingUtvidetRettService;
    readonly beregning: BeregningService;
    readonly beregningsgrunnlag: BeregningsgrunnlagService;
    readonly beregningsresultat: BeregningsresultatService;
    readonly brev: BrevService;
    readonly brukerdialog: BrukerdialogService;
    readonly default: DefaultService;
    readonly død: DødService;
    readonly dokument: DokumentService;
    readonly fagsak: FagsakService;
    readonly feriepenger: FeriepengerService;
    readonly fordel: FordelService;
    readonly forvaltning: ForvaltningService;
    readonly forvaltningPerson: ForvaltningPersonService;
    readonly historikk: HistorikkService;
    readonly infotrygdmigrering: InfotrygdmigreringService;
    readonly initFetch: InitFetchService;
    readonly inntektArbeidYtelse: InntektArbeidYtelseService;
    readonly integrasjon: IntegrasjonService;
    readonly journalposter: JournalposterService;
    readonly kodeverk: KodeverkService;
    readonly kompletthet: KompletthetService;
    readonly kontroll: KontrollService;
    readonly los: LosService;
    readonly navAnsatt: NavAnsattService;
    readonly notat: NotatService;
    readonly omsorgenFor: OmsorgenForService;
    readonly oppdrag: OppdragService;
    readonly oppgittOpptjening: OppgittOpptjeningService;
    readonly opplæringsinstitusjon: OpplæringsinstitusjonService;
    readonly opplæringspenger: OpplæringspengerService;
    readonly opptjening: OpptjeningService;
    readonly perioder: PerioderService;
    readonly pip: PipService;
    readonly prosesstask: ProsesstaskService;
    readonly rapportering: RapporteringService;
    readonly redirect: RedirectService;
    readonly registerdata: RegisterdataService;
    readonly saksnummer: SaksnummerService;
    readonly søknad: SøknadService;
    readonly søknadsfrist: SøknadsfristService;
    readonly sykdom: SykdomService;
    readonly tilbakekrevingsvalg: TilbakekrevingsvalgService;
    readonly tilsyn: TilsynService;
    readonly totrinnskontroll: TotrinnskontrollService;
    readonly uttak: UttakService;
    readonly vedtak: VedtakService;
    readonly vilkår: VilkårService;
    readonly ytelser: YtelserService;
    readonly request: BaseHttpRequest;
    constructor(config?: Partial<OpenAPIConfig>, HttpRequest?: HttpRequestConstructor);
}
export {};
//# sourceMappingURL=Client.d.ts.map